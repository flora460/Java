ðŸŽ¯ Fiche de RÃ©vision : Classes Wrapper en Java
ðŸ“Œ DÃ©finition
Les classes wrapper permettent d'encapsuler un type primitif dans un objet. Elles sont utiles pour manipuler les types primitifs dans des collections et pour utiliser des mÃ©thodes utilitaires.

ðŸ“Œ Correspondance des types primitifs et wrappers

Type Primitif	Classe Wrapper
int	Integer
double	Double
float	Float
char	Character
boolean	Boolean
byte	Byte
short	Short
long	Long
ðŸ“Œ Boxing et Unboxing

Boxing : Conversion d'un type primitif en classe wrapper.
java
Copier
Modifier
Integer i = Integer.valueOf(10); // Boxing explicite
Integer j = 10; // Auto-boxing
Unboxing : Conversion d'un objet wrapper en type primitif.
java
Copier
Modifier
int k = j.intValue(); // Unboxing explicite
int l = j; // Auto-unboxing
ðŸ“Œ MÃ©thodes Utiles des Classes Wrapper

Conversion String â†’ Type Wrapper
java
Copier
Modifier
Integer n = Integer.valueOf("123");
Double d = Double.valueOf("5.5");
Conversion Type Wrapper â†’ String
java
Copier
Modifier
String s = n.toString(); // "123"
Conversion Type Wrapper â†’ Primitif
java
Copier
Modifier
int x = n.intValue();
double y = d.doubleValue();
ðŸ“Œ Exemple d'utilisation

java
Copier
Modifier
public class Main {
  public static void main(String[] args) {
    Integer a = Integer.valueOf(5); // Boxing
    int b = a; // Unboxing
    System.out.println(a * 2); // Affiche 10
  }
}
ðŸ“Œ Pourquoi utiliser les classes wrapper ?
âœ… Permettent de stocker des valeurs primitives dans des structures comme ArrayList<Integer>.
âœ… Offrent des mÃ©thodes utilitaires (parseInt(), toString(), etc.).
âœ… Facilitent la conversion entre types primitifs et objets.